# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore -nowarn:all
      
    - name: Test
      run: dotnet test --no-build --verbosity normal --framework net9.0

    - name: Check if version changed
      id: version_check
      run: |
        VERSION_FILE="VERSION.txt"
        CURRENT_VERSION=$(dotnet msbuild P2PNet/P2PNet.csproj -nologo -t:GetVersion -v:diag | grep "Version:")
        echo $CURRENT_VERSION
        if [ -f "$VERSION_FILE" ]; then
          SAVED_VERSION=$(cat $VERSION_FILE)
          if [ "$CURRENT_VERSION" == "$SAVED_VERSION" ]; then
            echo "Version has not changed, skipping publish."
            echo "version_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Version has changed, updating $VERSION_FILE."
            echo $CURRENT_VERSION > $VERSION_FILE
            echo "version_changed=true" >> $GITHUB_OUTPUT
          fi
        else
          echo "No version file found, creating $VERSION_FILE."
          echo $CURRENT_VERSION > $VERSION_FILE
          echo "version_changed=true" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push VERSION.txt if version changed
      if: steps.version_check.outputs.version_changed == 'true'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add VERSION.txt
        git commit -m "Update VERSION.txt to $CURRENT_VERSION"
        git push

    - name: Publish NuGet package
      if: steps.version_check.outputs.version_changed == 'true'
      run: dotnet nuget push **/*.nupkg --source "https://api.nuget.org/v3/index.json" --api-key ${{ secrets.NUGET_PUSH_API_KEY }}
